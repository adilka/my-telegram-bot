from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import os

BOT_TOKEN = os.getenv("BOT_TOKEN")

goals_text = """
1. –£–ª—É—á—à–∞—Ç—å –¥–µ–≤–æ–ø—Å
2. –î–µ–ª–∞—Ç—å –ø—Ä–æ–µ–∫—Ç (–∏–≥—Ä—É)
3. –í—ã—É—á–∏—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
...
"""

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç, –ê–¥–∏–ª—å! –Ø –±–æ—Ç-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ üí™")

async def goals(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(goals_text)

if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("goals", goals))
    app.run_polling()

import threading
import http.server
import socketserver

# –§–µ–π–∫–æ–≤—ã–π HTTP-—Å–µ—Ä–≤–µ—Ä, —á—Ç–æ–±—ã Render –¥—É–º–∞–ª, —á—Ç–æ –ø–æ—Ä—Ç –æ—Ç–∫—Ä—ã—Ç
def fake_server():
    PORT = int(os.environ.get('PORT', 10000))
    Handler = http.server.SimpleHTTPRequestHandler
    with socketserver.TCPServer(("", PORT), Handler) as httpd:
        print(f"Fake web server started at port {PORT}")
        httpd.serve_forever()

threading.Thread(target=fake_server).start()

